plugins {
    id 'fabric-loom' version '0.10.+'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
    }

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    maven {
        name "Cloth Config"
        url "https://maven.shedaniel.me/"
    }

    maven {
        name 'TerraformersMC';
        url 'https://maven.terraformersmc.com/'
    }

    // Universal Graves dependencies go brrrrrrr
    maven { url 'https://maven.nucleoid.xyz' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "maven.modrinth:universal-graves:${project.graves_version}"

    // This is all for Universal Graves :despair:
    modImplementation "eu.pb4:sgui:1.0.0-rc6+1.18-pre5"
    modImplementation "eu.pb4:hologram-api:0.2.1+1.18-pre5"
    modImplementation "eu.pb4:placeholder-api:1.1.3+1.17.1"
    modImplementation "eu.pb4:polymer:0.2.0-beta.8+1.18"
    modImplementation "fr.catcore:server-translations-api:1.4.8+1.18-pre1"
    modImplementation "me.lucko:fabric-permissions-api:0.1-SNAPSHOT"

    //Cloth Config
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude (group: "net.fabricmc.fabric-api") }
    //Modmenu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude group: "net.fabricmc.fabric-api" }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}